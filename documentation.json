{
  "pipes": [],
  "interfaces": [],
  "injectables": [
    {
      "name": "LipsumService",
      "id": "injectable-LipsumService-c44a784b6d097f4aa9edb1d10a25bbdd",
      "file": "projects/ngx-lipsum/src/lib/lipsum.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "get",
          "args": [
            {
              "name": "params",
              "type": "ILoremIpsumParams",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 9,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "params",
              "type": "ILoremIpsumParams",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { loremIpsum, ILoremIpsumParams } from 'lorem-ipsum';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LipsumService {\n  constructor() {}\n  get(params?: ILoremIpsumParams) {\n    return loremIpsum(params);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 7
      },
      "type": "injectable"
    }
  ],
  "guards": [],
  "interceptors": [],
  "classes": [],
  "directives": [
    {
      "name": "LipsumDirective",
      "id": "directive-LipsumDirective-9c63382c2621993af6dec2e77e58a4ed",
      "file": "projects/ngx-lipsum/src/lib/lipsum.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive, ElementRef, Input, OnInit, Renderer2 } from '@angular/core';\nimport { LipsumService } from 'projects/ngx-lipsum/src/public-api';\nimport { ILoremIpsumParams } from 'lorem-ipsum';\n\nconst SHORT_EL_DEFAULTS: ILoremIpsumParams = {\n  units: 'words',\n  count: 4,\n};\nconst SENTENCE_DEFAULTS: ILoremIpsumParams = {\n  units: 'sentences',\n  count: 1,\n};\nconst PARAGRAPHS_DEFAULTS: ILoremIpsumParams = {\n  units: 'paragraphs',\n  count: 5,\n};\nconst CONFIG_MAP = new Map<string, ILoremIpsumParams>([\n  ['a', SHORT_EL_DEFAULTS],\n  ['article', PARAGRAPHS_DEFAULTS],\n  ['aside', PARAGRAPHS_DEFAULTS],\n  ['b', SHORT_EL_DEFAULTS],\n  ['button', SHORT_EL_DEFAULTS],\n  ['caption', SENTENCE_DEFAULTS],\n  ['cite', SENTENCE_DEFAULTS],\n  ['code', SENTENCE_DEFAULTS],\n  ['del', SHORT_EL_DEFAULTS],\n  ['details', SENTENCE_DEFAULTS],\n  ['dialog', SENTENCE_DEFAULTS],\n  ['div', PARAGRAPHS_DEFAULTS],\n  ['em', SHORT_EL_DEFAULTS],\n  ['figcaption', SENTENCE_DEFAULTS],\n  ['footer', PARAGRAPHS_DEFAULTS],\n  ['h1', SHORT_EL_DEFAULTS],\n  ['h2', SHORT_EL_DEFAULTS],\n  ['h3', SHORT_EL_DEFAULTS],\n  ['h4', SHORT_EL_DEFAULTS],\n  ['h5', SHORT_EL_DEFAULTS],\n  ['h6', SHORT_EL_DEFAULTS],\n  ['header', SENTENCE_DEFAULTS],\n  ['input', SHORT_EL_DEFAULTS],\n  ['label', SHORT_EL_DEFAULTS],\n  ['li', SENTENCE_DEFAULTS],\n  ['main', PARAGRAPHS_DEFAULTS],\n  ['nav', SENTENCE_DEFAULTS],\n  [\n    'ol',\n    { ...PARAGRAPHS_DEFAULTS, paragraphLowerBound: 1, paragraphUpperBound: 1 },\n  ],\n  ['option', SHORT_EL_DEFAULTS],\n  ['output', SENTENCE_DEFAULTS],\n  ['p', { ...PARAGRAPHS_DEFAULTS, count: 1 }],\n  ['pre', SENTENCE_DEFAULTS],\n  ['s', SHORT_EL_DEFAULTS],\n  ['section', PARAGRAPHS_DEFAULTS],\n  ['small', SHORT_EL_DEFAULTS],\n  ['span', SHORT_EL_DEFAULTS],\n  ['strong', SHORT_EL_DEFAULTS],\n  ['sub', SHORT_EL_DEFAULTS],\n  ['summary', SENTENCE_DEFAULTS],\n  ['sup', SHORT_EL_DEFAULTS],\n  ['td', SHORT_EL_DEFAULTS],\n  ['template', SENTENCE_DEFAULTS],\n  ['textarea', SENTENCE_DEFAULTS],\n  ['th', SHORT_EL_DEFAULTS],\n  [\n    'ul',\n    { ...PARAGRAPHS_DEFAULTS, paragraphLowerBound: 1, paragraphUpperBound: 1 },\n  ],\n]);\n\n@Directive({\n  selector: '[lipsum]',\n})\nexport class LipsumDirective implements OnInit {\n  @Input('lipsum') config?: ILoremIpsumParams = {};\n\n  constructor(\n    readonly el: ElementRef<any>,\n    private renderer: Renderer2,\n    private lipsum: LipsumService,\n  ) {}\n\n  get params(): ILoremIpsumParams {\n    return {\n      ...(CONFIG_MAP.get(this.el.nativeElement.localName) || {}),\n      ...this.config,\n    };\n  }\n\n  ngOnInit() {\n    const el = this.el.nativeElement;\n    if (['input', 'textarea', 'output'].includes(el.localName)) {\n      this.setLipsumForInputElements(this.el);\n    } else if (['ul', 'ol'].includes(el.localName)) {\n      this.setLipsumForListElements(this.el);\n    } else {\n      this.setLipsumForCommonElements(this.el);\n    }\n  }\n\n  private setLipsumForInputElements(\n    ref: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n  ) {\n    ref.nativeElement.value = this.lipsum.get(this.params);\n  }\n\n  private setLipsumForListElements(\n    ref: ElementRef<HTMLOListElement | HTMLLIElement>,\n  ) {\n    const paragraphs = this.lipsum.get(this.params).split('\\n');\n    paragraphs.forEach(p => {\n      const liEl = this.renderer.createElement('li');\n      liEl.innerText = p;\n      ref.nativeElement.appendChild(liEl);\n    });\n  }\n\n  private setLipsumForCommonElements(ref: ElementRef<HTMLElement>) {\n    ref.nativeElement.innerText = this.lipsum.get(this.params);\n  }\n}\n",
      "selector": "[lipsum]",
      "providers": [],
      "inputsClass": [
        {
          "name": "lipsum",
          "defaultValue": "{}",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 75,
          "type": "ILoremIpsumParams"
        }
      ],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 90,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "setLipsumForCommonElements",
          "args": [
            {
              "name": "ref",
              "type": "ElementRef<HTMLElement>",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 118,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [120],
          "jsdoctags": [
            {
              "name": "ref",
              "type": "ElementRef<HTMLElement>",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setLipsumForInputElements",
          "args": [
            {
              "name": "ref",
              "type": "ElementRef<HTMLInputElement | HTMLTextAreaElement>",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 101,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [120],
          "jsdoctags": [
            {
              "name": "ref",
              "type": "ElementRef<HTMLInputElement | HTMLTextAreaElement>",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setLipsumForListElements",
          "args": [
            {
              "name": "ref",
              "type": "ElementRef<HTMLOListElement | HTMLLIElement>",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 107,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [120],
          "jsdoctags": [
            {
              "name": "ref",
              "type": "ElementRef<HTMLOListElement | HTMLLIElement>",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "implements": ["OnInit"],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "el",
            "type": "ElementRef<any>",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "lipsum",
            "type": "LipsumService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 75,
        "jsdoctags": [
          {
            "name": "el",
            "type": "ElementRef<any>",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "lipsum",
            "type": "LipsumService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "accessors": {
        "params": {
          "name": "params",
          "getSignature": {
            "name": "params",
            "type": "",
            "returnType": "ILoremIpsumParams",
            "line": 83
          }
        }
      }
    }
  ],
  "components": [
    {
      "name": "AppComponent",
      "id": "component-AppComponent-5840bd6d4b5786143472c74c59b8fa3a",
      "file": "src/app/app.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-root",
      "styleUrls": ["./app.component.scss"],
      "styles": [],
      "templateUrl": ["./app.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "lipsumText",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 10,
          "modifierKind": [122]
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { LipsumService } from 'ngx-lipsum';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  public lipsumText: string;\n  constructor(lipsum: LipsumService) {\n    this.lipsumText = lipsum.get();\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./app.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "lipsum",
            "type": "LipsumService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 10,
        "jsdoctags": [
          {
            "name": "lipsum",
            "type": "LipsumService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData": "<h1>ngx-lipsum</h1>\n<h2>Service usage</h2>\n<p>{{ lipsumText }}</p>\n\n<h2>Component usage</h2>\n<ngx-lipsum></ngx-lipsum>\n\n<h2>Directive usage</h2>\n<textarea [lipsum]></textarea>\n<output [lipsum]></output>\n<p [lipsum]></p>\n<input [lipsum] />\n<ul [lipsum]></ul>\n<a [lipsum]></a>\n"
    },
    {
      "name": "NgxLipsumComponent",
      "id": "component-NgxLipsumComponent-d9dee56390cd19ca3990f75e02aa1f0c",
      "file": "projects/ngx-lipsum/src/lib/ngx-lipsum.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ngx-lipsum",
      "styleUrls": [],
      "styles": [],
      "template": "<ng-container>{{ text }}</ng-container>",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "config",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 11,
          "type": "ILoremIpsumParams"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "text",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 13,
          "modifierKind": [122]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnChanges",
          "args": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 20,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 16,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit, SimpleChanges } from '@angular/core';\nimport { ILoremIpsumParams } from 'lorem-ipsum';\nimport { LipsumService } from './lipsum.service';\n\n@Component({\n  selector: 'ngx-lipsum',\n  template: `<ng-container>{{ text }}</ng-container>`,\n  styles: [],\n})\nexport class NgxLipsumComponent implements OnInit {\n  @Input() config?: ILoremIpsumParams;\n\n  public text!: string;\n  constructor(private lipsum: LipsumService) {}\n\n  ngOnInit(): void {\n    this.text = this.lipsum.get(this.config);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.text = this.lipsum.get(changes.config.currentValue);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "lipsum",
            "type": "LipsumService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 13,
        "jsdoctags": [
          {
            "name": "lipsum",
            "type": "LipsumService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"]
    }
  ],
  "modules": [
    {
      "name": "AppModule",
      "id": "module-AppModule-b22961b6fe8b5b4a2d9b6766cbc04b2c",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/app.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgxLipsumModule } from 'ngx-lipsum';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, NgxLipsumModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AppComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "NgxLipsumModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": [
            {
              "name": "AppComponent"
            }
          ]
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "NgxLipsumModule",
      "id": "module-NgxLipsumModule-3dbb15a5582ec2b6e325d2464764ede1",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "projects/ngx-lipsum/src/lib/ngx-lipsum.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\nimport { NgxLipsumComponent } from './ngx-lipsum.component';\nimport { LipsumDirective } from './lipsum.directive';\n\n@NgModule({\n  declarations: [NgxLipsumComponent, LipsumDirective],\n  imports: [],\n  exports: [NgxLipsumComponent, LipsumDirective],\n})\nexport class NgxLipsumModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "LipsumDirective"
            },
            {
              "name": "NgxLipsumComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "LipsumDirective"
            },
            {
              "name": "NgxLipsumComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    }
  ],
  "miscellaneous": {
    "variables": [
      {
        "name": "CONFIG_MAP",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ngx-lipsum/src/lib/lipsum.directive.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "new Map<string, ILoremIpsumParams>([\n  ['a', SHORT_EL_DEFAULTS],\n  ['article', PARAGRAPHS_DEFAULTS],\n  ['aside', PARAGRAPHS_DEFAULTS],\n  ['b', SHORT_EL_DEFAULTS],\n  ['button', SHORT_EL_DEFAULTS],\n  ['caption', SENTENCE_DEFAULTS],\n  ['cite', SENTENCE_DEFAULTS],\n  ['code', SENTENCE_DEFAULTS],\n  ['del', SHORT_EL_DEFAULTS],\n  ['details', SENTENCE_DEFAULTS],\n  ['dialog', SENTENCE_DEFAULTS],\n  ['div', PARAGRAPHS_DEFAULTS],\n  ['em', SHORT_EL_DEFAULTS],\n  ['figcaption', SENTENCE_DEFAULTS],\n  ['footer', PARAGRAPHS_DEFAULTS],\n  ['h1', SHORT_EL_DEFAULTS],\n  ['h2', SHORT_EL_DEFAULTS],\n  ['h3', SHORT_EL_DEFAULTS],\n  ['h4', SHORT_EL_DEFAULTS],\n  ['h5', SHORT_EL_DEFAULTS],\n  ['h6', SHORT_EL_DEFAULTS],\n  ['header', SENTENCE_DEFAULTS],\n  ['input', SHORT_EL_DEFAULTS],\n  ['label', SHORT_EL_DEFAULTS],\n  ['li', SENTENCE_DEFAULTS],\n  ['main', PARAGRAPHS_DEFAULTS],\n  ['nav', SENTENCE_DEFAULTS],\n  [\n    'ol',\n    { ...PARAGRAPHS_DEFAULTS, paragraphLowerBound: 1, paragraphUpperBound: 1 },\n  ],\n  ['option', SHORT_EL_DEFAULTS],\n  ['output', SENTENCE_DEFAULTS],\n  ['p', { ...PARAGRAPHS_DEFAULTS, count: 1 }],\n  ['pre', SENTENCE_DEFAULTS],\n  ['s', SHORT_EL_DEFAULTS],\n  ['section', PARAGRAPHS_DEFAULTS],\n  ['small', SHORT_EL_DEFAULTS],\n  ['span', SHORT_EL_DEFAULTS],\n  ['strong', SHORT_EL_DEFAULTS],\n  ['sub', SHORT_EL_DEFAULTS],\n  ['summary', SENTENCE_DEFAULTS],\n  ['sup', SHORT_EL_DEFAULTS],\n  ['td', SHORT_EL_DEFAULTS],\n  ['template', SENTENCE_DEFAULTS],\n  ['textarea', SENTENCE_DEFAULTS],\n  ['th', SHORT_EL_DEFAULTS],\n  [\n    'ul',\n    { ...PARAGRAPHS_DEFAULTS, paragraphLowerBound: 1, paragraphUpperBound: 1 },\n  ],\n])"
      },
      {
        "name": "context",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/test.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
      },
      {
        "name": "context",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ngx-lipsum/src/test.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/ngx-lipsum.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "environment",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/environments/environment.prod.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\n  production: true\n}"
      },
      {
        "name": "environment",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/environments/environment.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\n  production: false\n}"
      },
      {
        "name": "PARAGRAPHS_DEFAULTS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ngx-lipsum/src/lib/lipsum.directive.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "ILoremIpsumParams",
        "defaultValue": "{\n  units: 'paragraphs',\n  count: 5,\n}"
      },
      {
        "name": "require",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/test.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "literal type"
      },
      {
        "name": "require",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ngx-lipsum/src/test.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "literal type"
      },
      {
        "name": "SENTENCE_DEFAULTS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ngx-lipsum/src/lib/lipsum.directive.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "ILoremIpsumParams",
        "defaultValue": "{\n  units: 'sentences',\n  count: 1,\n}"
      },
      {
        "name": "SHORT_EL_DEFAULTS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/ngx-lipsum/src/lib/lipsum.directive.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "ILoremIpsumParams",
        "defaultValue": "{\n  units: 'words',\n  count: 4,\n}"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/ngx-lipsum.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<NgxLipsumComponent>",
        "defaultValue": "(args: NgxLipsumComponent) => ({\n  props: args,\n})"
      },
      {
        "name": "WithConfig",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/ngx-lipsum.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      }
    ],
    "functions": [],
    "typealiases": [],
    "enumerations": [],
    "groupedVariables": {
      "projects/ngx-lipsum/src/lib/lipsum.directive.ts": [
        {
          "name": "CONFIG_MAP",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ngx-lipsum/src/lib/lipsum.directive.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "new Map<string, ILoremIpsumParams>([\n  ['a', SHORT_EL_DEFAULTS],\n  ['article', PARAGRAPHS_DEFAULTS],\n  ['aside', PARAGRAPHS_DEFAULTS],\n  ['b', SHORT_EL_DEFAULTS],\n  ['button', SHORT_EL_DEFAULTS],\n  ['caption', SENTENCE_DEFAULTS],\n  ['cite', SENTENCE_DEFAULTS],\n  ['code', SENTENCE_DEFAULTS],\n  ['del', SHORT_EL_DEFAULTS],\n  ['details', SENTENCE_DEFAULTS],\n  ['dialog', SENTENCE_DEFAULTS],\n  ['div', PARAGRAPHS_DEFAULTS],\n  ['em', SHORT_EL_DEFAULTS],\n  ['figcaption', SENTENCE_DEFAULTS],\n  ['footer', PARAGRAPHS_DEFAULTS],\n  ['h1', SHORT_EL_DEFAULTS],\n  ['h2', SHORT_EL_DEFAULTS],\n  ['h3', SHORT_EL_DEFAULTS],\n  ['h4', SHORT_EL_DEFAULTS],\n  ['h5', SHORT_EL_DEFAULTS],\n  ['h6', SHORT_EL_DEFAULTS],\n  ['header', SENTENCE_DEFAULTS],\n  ['input', SHORT_EL_DEFAULTS],\n  ['label', SHORT_EL_DEFAULTS],\n  ['li', SENTENCE_DEFAULTS],\n  ['main', PARAGRAPHS_DEFAULTS],\n  ['nav', SENTENCE_DEFAULTS],\n  [\n    'ol',\n    { ...PARAGRAPHS_DEFAULTS, paragraphLowerBound: 1, paragraphUpperBound: 1 },\n  ],\n  ['option', SHORT_EL_DEFAULTS],\n  ['output', SENTENCE_DEFAULTS],\n  ['p', { ...PARAGRAPHS_DEFAULTS, count: 1 }],\n  ['pre', SENTENCE_DEFAULTS],\n  ['s', SHORT_EL_DEFAULTS],\n  ['section', PARAGRAPHS_DEFAULTS],\n  ['small', SHORT_EL_DEFAULTS],\n  ['span', SHORT_EL_DEFAULTS],\n  ['strong', SHORT_EL_DEFAULTS],\n  ['sub', SHORT_EL_DEFAULTS],\n  ['summary', SENTENCE_DEFAULTS],\n  ['sup', SHORT_EL_DEFAULTS],\n  ['td', SHORT_EL_DEFAULTS],\n  ['template', SENTENCE_DEFAULTS],\n  ['textarea', SENTENCE_DEFAULTS],\n  ['th', SHORT_EL_DEFAULTS],\n  [\n    'ul',\n    { ...PARAGRAPHS_DEFAULTS, paragraphLowerBound: 1, paragraphUpperBound: 1 },\n  ],\n])"
        },
        {
          "name": "PARAGRAPHS_DEFAULTS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ngx-lipsum/src/lib/lipsum.directive.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ILoremIpsumParams",
          "defaultValue": "{\n  units: 'paragraphs',\n  count: 5,\n}"
        },
        {
          "name": "SENTENCE_DEFAULTS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ngx-lipsum/src/lib/lipsum.directive.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ILoremIpsumParams",
          "defaultValue": "{\n  units: 'sentences',\n  count: 1,\n}"
        },
        {
          "name": "SHORT_EL_DEFAULTS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ngx-lipsum/src/lib/lipsum.directive.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ILoremIpsumParams",
          "defaultValue": "{\n  units: 'words',\n  count: 4,\n}"
        }
      ],
      "src/test.ts": [
        {
          "name": "context",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/test.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
        },
        {
          "name": "require",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/test.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "literal type"
        }
      ],
      "projects/ngx-lipsum/src/test.ts": [
        {
          "name": "context",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ngx-lipsum/src/test.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
        },
        {
          "name": "require",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/ngx-lipsum/src/test.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "literal type"
        }
      ],
      "src/stories/ngx-lipsum.component.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/ngx-lipsum.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/ngx-lipsum.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<NgxLipsumComponent>",
          "defaultValue": "(args: NgxLipsumComponent) => ({\n  props: args,\n})"
        },
        {
          "name": "WithConfig",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/ngx-lipsum.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        }
      ],
      "src/environments/environment.prod.ts": [
        {
          "name": "environment",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/environments/environment.prod.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\n  production: true\n}"
        }
      ],
      "src/environments/environment.ts": [
        {
          "name": "environment",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/environments/environment.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\n  production: false\n}"
        }
      ]
    },
    "groupedFunctions": {},
    "groupedEnumerations": {},
    "groupedTypeAliases": {}
  },
  "routes": [],
  "coverage": {
    "count": 0,
    "status": "low",
    "files": [
      {
        "filePath": "projects/ngx-lipsum/src/lib/lipsum.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "LipsumDirective",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "projects/ngx-lipsum/src/lib/lipsum.directive.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CONFIG_MAP",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ngx-lipsum/src/lib/lipsum.directive.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "PARAGRAPHS_DEFAULTS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ngx-lipsum/src/lib/lipsum.directive.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SENTENCE_DEFAULTS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ngx-lipsum/src/lib/lipsum.directive.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SHORT_EL_DEFAULTS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ngx-lipsum/src/lib/lipsum.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "LipsumService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "projects/ngx-lipsum/src/lib/ngx-lipsum.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "NgxLipsumComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "projects/ngx-lipsum/src/test.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "context",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/ngx-lipsum/src/test.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "require",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/app.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/environments/environment.prod.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "environment",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/environments/environment.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "environment",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/ngx-lipsum.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/ngx-lipsum.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/ngx-lipsum.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithConfig",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/test.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "context",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/test.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "require",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      }
    ]
  }
}
